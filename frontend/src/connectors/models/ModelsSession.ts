/* tslint:disable */
/* eslint-disable */
/**
 * PickAMovie Swagger API
 * May the force be with us
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ModelsProposal,
    ModelsProposalFromJSON,
    ModelsProposalFromJSONTyped,
    ModelsProposalToJSON,
} from './';

/**
 * 
 * @export
 * @interface ModelsSession
 */
export interface ModelsSession {
    /**
     * 
     * @type {string}
     * @memberof ModelsSession
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsSession
     */
    endAt: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsSession
     */
    id: number;
    /**
     * 
     * @type {Array<ModelsProposal>}
     * @memberof ModelsSession
     */
    proposals?: Array<ModelsProposal>;
    /**
     * 
     * @type {string}
     * @memberof ModelsSession
     */
    startAt: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsSession
     */
    updatedAt?: string;
}

export function ModelsSessionFromJSON(json: any): ModelsSession {
    return ModelsSessionFromJSONTyped(json, false);
}

export function ModelsSessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsSession {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'endAt': json['endAt'],
        'id': json['id'],
        'proposals': !exists(json, 'proposals') ? undefined : ((json['proposals'] as Array<any>).map(ModelsProposalFromJSON)),
        'startAt': json['startAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
    };
}

export function ModelsSessionToJSON(value?: ModelsSession | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': value.createdAt,
        'endAt': value.endAt,
        'id': value.id,
        'proposals': value.proposals === undefined ? undefined : ((value.proposals as Array<any>).map(ModelsProposalToJSON)),
        'startAt': value.startAt,
        'updatedAt': value.updatedAt,
    };
}


